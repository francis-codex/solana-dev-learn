import { Keypair, Cluster, Connection, PublicKey } from '@solana/web3.js';

declare const keypairToSecretKeyJSON: (keypair: Keypair) => string;
declare const getCustomErrorMessage: (possibleProgramErrors: Array<string>, errorMessage: string) => string | null;
declare const getExplorerLink: (linkType: "transaction" | "tx" | "address" | "block", id: string, cluster?: Cluster | "localnet") => string;
declare const getKeypairFromFile: (filepath?: string) => Promise<Keypair>;
declare const getKeypairFromEnvironment: (variableName: string) => Keypair;
declare const addKeypairToEnvFile: (keypair: Keypair, variableName: string, fileName?: string) => Promise<void>;
declare const requestAndConfirmAirdrop: (connection: Connection, publicKey: PublicKey, amount: number) => Promise<number>;
declare const requestAndConfirmAirdropIfRequired: (connection: Connection, publicKey: PublicKey, airdropAmount: number, minimumBalance: number) => Promise<number>;

export { addKeypairToEnvFile, getCustomErrorMessage, getExplorerLink, getKeypairFromEnvironment, getKeypairFromFile, keypairToSecretKeyJSON, requestAndConfirmAirdrop, requestAndConfirmAirdropIfRequired };
